<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Mr. ChatBot Popup</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/css/bootstrap.min.css" />
  <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>

  <style>
    body {
      margin: 0;
      padding: 0;
      font-family: 'Poppins', sans-serif;
      background: linear-gradient(135deg, #667eea, #764ba2);
      height: 100vh;
      overflow-x: hidden;
    }

    /* Floating Chatbot Button */
    .chatbot-toggle {
      position: fixed;
      bottom: 30px;
      right: 30px;
      background: #00c9a7;
      border: none;
      width: 60px;
      height: 60px;
      border-radius: 50%;
      color: white;
      font-size: 30px;
      cursor: pointer;
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
      z-index: 1000;
      transition: background 0.3s ease;
    }

    .chatbot-toggle:hover {
      background: #00b19c;
    }

    /* Popup Chatbot Box */
    .chat-wrapper {
      position: fixed;
      bottom: 100px;
      right: 30px;
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(10px);
      border-radius: 20px;
      padding: 20px;
      width: 320px;
      max-height: 500px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
      color: #fff;
      display: none;
      flex-direction: column;
      z-index: 999;
      animation: fadeInUp 0.3s ease;
    }

    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    h2 {
      text-align: center;
      margin-bottom: 20px;
      font-weight: 600;
      color: #fff;
      font-size: 20px;
    }

    .form-control {
      background: rgba(255, 255, 255, 0.2);
      border: none;
      color: #fff;
      font-size: 14px;
      border-radius: 10px;
      padding: 10px 12px;
      margin-bottom: 10px;
    }

    .form-control::placeholder {
      color: #ddd;
    }

    .btn-success {
      width: 100%;
      border-radius: 10px;
      font-size: 15px;
      font-weight: 500;
      background: #00c9a7;
      border: none;
      transition: 0.3s ease;
    }

    .btn-success:hover {
      background: #00b19c;
    }

    #response {
      margin-top: 15px;
      background-color: rgba(255, 255, 255, 0.05);
      padding: 10px;
      border-radius: 10px;
      min-height: 80px;
      font-size: 14px;
      color: #fff;
      overflow-y: auto;
      max-height: 200px;
    }

    #response h3 {
      color: #ffc107;
      font-size: 1.1em;
    }

    #response strong {
      color: #ff6b6b;
    }

    #response ul {
      padding-left: 20px;
    }

    #response li {
      margin-bottom: 5px;
    }
  </style>
</head>

<body>

  <!-- Chatbot Toggle Button -->
  <button class="chatbot-toggle" onclick="toggleChat()">
    ðŸ’¬
  </button>

  <!-- Chatbot Popup -->
  <div class="chat-wrapper" id="chatWrapper">
    <h2>Mr.Rubi ðŸ¤–</h2>
    <div class="form-group">
      <input type="text" class="form-control" id="userInput" placeholder="Ask something..." />
    </div>
    <button class="btn btn-success" onclick="sendMessage()">Ask!</button>
    <div id="response"></div>
  </div>

  <script>
    function toggleChat() {
      const chat = document.getElementById('chatWrapper');
      if (chat.style.display === "flex") {
        chat.style.display = "none";
      } else {
        chat.style.display = "flex";
      }
    }

    async function sendMessage() {
      const input = document.getElementById('userInput').value;
      const responseDiv = document.getElementById('response');
      if (!input) {
        responseDiv.innerHTML = 'Please enter a message.';
        return;
      }
      responseDiv.innerHTML = '<div class="spinner-border text-light" role="status"><span class="sr-only">Loading...</span></div>';

      try {
        const response = await fetch('https://openrouter.ai/api/v1/chat/completions', {
          method: 'POST',
          headers: {
            Authorization: 'Bearer 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',
            'HTTP-Referer': '',
            'X-Title': 'SiteName',
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            model: 'deepseek/deepseek-r1:free',
            messages: [{ role: 'user', content: input }],
          }),
        });

        const data = await response.json();
        const markdownText = data.choices?.[0]?.message?.content || 'No response received.';
        responseDiv.innerHTML = marked.parse(markdownText);
      } catch (error) {
        responseDiv.innerHTML = 'Error: ' + error.message;
      }
    }
  </script>

</body>
</html>
